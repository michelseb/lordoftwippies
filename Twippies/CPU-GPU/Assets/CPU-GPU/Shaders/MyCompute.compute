// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

struct Vert{
	half3 pos;
	half4 Couleur;
};

struct Cent{
	half3 pos;
	half4 Couleur;
};

RWStructuredBuffer<Vert> Vertex;
RWStructuredBuffer<Cent> Center;

[numthreads(1024,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	half MinDist = 10000.0;
	int temp = 0;

	for ( unsigned int j = 0 ; j < Center.Length ; j ++){		
		half dist = length(Vertex[id.x].pos - Center[j].pos);	
		if( dist < MinDist){			
			MinDist = dist;
			temp = j;
		}
	}
	Vertex[id.x].Couleur = Center[temp].Couleur;
}
